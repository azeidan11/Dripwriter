// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Plan {
  FREE
  STARTER
  PRO
  DAYPASS
  DEV
}

enum DripStatus {
  RUNNING
  PAUSED
  DONE
  ERROR
  CANCELED
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  plan      Plan     @default(FREE)
  name      String?  // full name from Google profile
  tz        String?  // e.g. "America/Los_Angeles"
  createdAt DateTime @default(now())

  gAccessToken    String?
  gAccessTokenExp Int?
  gRefreshToken   String?

  DailyUsages  DailyUsage[]
  DripSessions DripSession[]
}

model DailyUsage {
  id        String @id @default(cuid())
  userId    String
  dateKey   String   // "YYYY-MM-DD" (UTC or user's tz)
  wordsUsed Int      @default(0)

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, dateKey])
}

model DripSession {
  id          String     @id @default(cuid())
  userId      String
  docId       String
  text        String
  totalWords  Int
  doneWords   Int        @default(0)
  durationMin Int
  status      DripStatus @default(RUNNING)
  nextAt      DateTime
  startedAt   DateTime   @default(now())
  endsAt      DateTime
  lastError   String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@index([status, nextAt])
  @@index([userId])
}
